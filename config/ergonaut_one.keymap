#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <200>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        shift_caps: shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE  &kp Q             &kp W               &kp E           &kp R           &kp T   &kp Y                 &kp U            &kp I            &kp O                &kp P                     &kp LBKT
&kp TAB     &mt LEFT_SHIFT A  &mt LEFT_CONTROL S  &mt LEFT_ALT D  &mt LEFT_GUI F  &kp G   &kp H                 &mt RIGHT_GUI J  &mt RIGHT_ALT K  &mt RIGHT_CONTROL L  &mt LEFT_SHIFT SEMICOLON  &kp SQT
&kp MINUS   &kp Z             &kp X               &kp C           &kp V           &kp B   &kp N                 &kp M            &kp COMMA        &kp DOT              &kp FSLH                  &mt RIGHT_SHIFT BSLH
                                                  &tog 2          &shift_caps     &tog 1  &mt LG(SPACE) ESCAPE  &lt 1 SPACE      &kp ENTER
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp GRAVE            &none         &kp LEFT_BRACKET         &kp RIGHT_BRACKET         &none      &none          &none           &kp UP_ARROW    &none            &none      &none
&trans  &mt LEFT_SHIFT EXCL  &mt LCTRL AT  &mt LEFT_ALT LEFT_BRACE  &mt LEFT_GUI RIGHT_BRACE  &kp PRCNT  &kp BACKSPACE  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp EQUAL  &kp BACKSLASH
&trans  &none                &none         &kp LEFT_PARENTHESIS     &kp RIGHT_PARENTHESIS     &none      &none          &none           &none           &none            &none      &trans
                                           &trans                   &trans                    &trans     &trans         &trans          &trans
            >;
        };

        raise_layer {
            bindings = <
&mt LGUI KP_NUM  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT    &none
&mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp PLUS      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &none
&trans           &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT    &kp STAR      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH  &trans
                                             &trans     &trans     &trans        &trans        &trans        &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none   &none   &none  &none  &bootloader
&none        &none         &none         &none         &none         &none         &none  &none   &none   &none  &none  &none
&sys_reset   &none         &none         &none         &none         &none         &none  &none   &none   &none  &none  &sys_reset
                                         &trans        &none         &trans        &none  &trans  &trans
            >;
        };
    };
};
