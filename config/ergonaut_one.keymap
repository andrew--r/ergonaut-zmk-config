#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <150>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q  &kp W               &kp E           &kp R           &kp T  &kp Y                 &kp U            &kp I            &kp O                &kp P     &kp LBKT
&mo 1      &kp A  &mt LEFT_CONTROL S  &mt LEFT_ALT D  &mt LEFT_GUI F  &kp G  &kp H                 &mt RIGHT_GUI J  &mt RIGHT_ALT K  &mt RIGHT_CONTROL L  &kp SEMI  &kp SQT
&kp MINUS  &kp Z  &kp X               &kp C           &kp V           &kp B  &kp N                 &kp M            &kp COMMA        &kp DOT              &kp FSLH  &mt RIGHT_SHIFT BSLH
                                      &lt 2 ESCAPE    &kp LEFT_SHIFT  &mo 1  &mt LG(SPACE) ESCAPE  &lt 1 ENTER      &kp SPACE
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp GRAVE  &none         &kp LEFT_BRACKET         &kp RIGHT_BRACKET         &none      &none          &none           &kp UP_ARROW    &none            &none      &none
&trans  &kp EXCL   &mt LCTRL AT  &mt LEFT_ALT LEFT_BRACE  &mt LEFT_GUI RIGHT_BRACE  &kp PRCNT  &kp BACKSPACE  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp EQUAL  &kp BACKSLASH
&trans  &kp N1     &kp N2        &kp LEFT_PARENTHESIS     &kp RIGHT_PARENTHESIS     &kp N5     &kp N6         &kp N7          &kp N8          &kp N9           &kp N0     &trans
                                 &trans                   &trans                    &trans     &trans         &trans          &trans
            >;
        };

        raise_layer {
            bindings = <
&mt LGUI KP_NUM  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &none         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none      &none
&mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp NUMBER_0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &none
&kp LALT         &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT    &none         &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none      &trans
                                             &trans     &trans     &trans        &trans        &trans        &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none         &none         &none         &none         &none         &bootloader
&none        &none         &none         &none         &none         &none         &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &none         &trans        &trans
            >;
        };
    };
};
